% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/initialization.R
\name{.projected_gradient_descent}
\alias{.projected_gradient_descent}
\title{Projected gradient descent for initial matrix}
\usage{
.projected_gradient_descent(
  dat,
  k = 2,
  max_val = NA,
  direction = "<=",
  max_iter = 50,
  tol = 0.001,
  ...
)
}
\arguments{
\item{dat}{dataset where the \code{n} rows represent cells and \code{d} columns represent genes.
\code{attr(dat, "family")} needs to encode the \code{family} information, as this is how the function
uses generics.}

\item{k}{positive integer less than \code{min(c(nrow(dat), ncol(dat)))}}

\item{max_val}{maximum magnitude of the inner product}

\item{direction}{character either \code{"<="} or \code{">="} or \code{NA} that dictates the domain of the natural
parameter for the family in \code{family}}

\item{max_iter}{maximum number of iterations}

\item{tol}{numeric}

\item{...}{extra arguments, such as nuisance parameters for \code{"neg_binom"}
or \code{"curved gaussian"} for \code{family}}
}
\value{
\code{n} by \code{p} matrix
}
\description{
After using \code{eSVD:::.determine_initial_matrix} to determine the initial matrix,
uses a projected gradient descent strategy to find a rank-\code{k} initial matrix that minimizes
the negative log-likelihood according the distribution specified in \code{family}.
See the documentation for \code{eSVD:::.adaptive_gradient_step} for more information.
}
