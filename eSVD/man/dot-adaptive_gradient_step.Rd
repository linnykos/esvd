% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/initialization.R
\name{.adaptive_gradient_step}
\alias{.adaptive_gradient_step}
\title{Adaptive projective gradient descent}
\usage{
.adaptive_gradient_step(
  dat,
  nat_mat,
  gradient_mat,
  k,
  max_val = NA,
  direction = "<=",
  stepsize_init = 100,
  stepdown_factor = 2,
  max_iter = 20,
  ...
)
}
\arguments{
\item{dat}{dataset where the \code{n} rows represent cells and \code{d} columns represent genes.
\code{attr(dat, "family")} needs to encode the \code{family} information, as this is how the function
uses generics.}

\item{nat_mat}{\code{n} by \code{d} matrix}

\item{gradient_mat}{\code{n} by \code{d} matrix}

\item{k}{boolean. If \code{TRUE}, then place the singular values on \code{v_mat}}

\item{max_val}{maximum magnitude of the inner product, or \code{NA}}

\item{direction}{character either \code{"<="} or \code{">="} or \code{NA} that dictates the domain of the natural
parameter for the family in \code{family}}

\item{stepsize_init}{numeric}

\item{stepdown_factor}{numeric}

\item{max_iter}{numeric}

\item{...}{extra arguments, such as nuisance parameters for \code{"neg_binom"}
or \code{"curved gaussian"} for \code{family}}
}
\value{
\code{n} by \code{d} matrix
}
\description{
The projective gradient descent is "adaptive" in the sense
that it will find an appropriate step size to ensure that after projection,
the objective value descreases. This is a heuristic to simply enable
reasonable results, not necessarily theoretically justified or computationally
efficient.
}
\details{
Be aware of how \code{eSVD:::.project_rank_feasibility} works, as if it cannot
successfully find a low-rank representation of the current estimate of the matrix, then
it will use \code{eSVD:::.sbm_projection} to do the approximation instead.
}
